---
AWSTemplateFormatVersion: "2010-09-09"
Description: create security groups for ALB, APPs, and DB.
Metadata:
  Comment: "This is a group project for course INFOSYS 735 group assessment2"
  Owner: "Group 15"
Parameters:
  namePrefix:
    Type: String
    Default: AnyGroup
    Description: Prefix for resource names
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the security group will be created
  MyIP:
    Type: String
    Description: Your IP address in CIDR notation
    Default: 0.0.0.0/0
Resources:
  SecurityGroupLoadALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTPS from everywhere
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        #allowing HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # Allow HTTP from anywhere
        #allowing HTTPS from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # Allow HTTPS from anywhere
      Tags:
        - Key: Name
          Value: !Sub "${namePrefix}-LoadBalancerSG"
  SecurityGroupApp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP from ALB SG only
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref SecurityGroupLoadALB # Allow HTTP from Load Balancer SG
      Tags:
        - Key: Name
          Value: !Sub "${namePrefix}-AppSG"
  # SecurityGroupDb:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Enable Oracle from App SG only
  #     VpcId: !Ref VPCId
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: 1521
  #         ToPort: 1521
  #         SourceSecurityGroupId: !Ref SecurityGroupApp # Allow oracle from App SG
  #     Tags:
  #       - Key: Name
  #         Value: !Sub "${namePrefix}-DbSG"
  SecurityGroupDb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable mysql from App SG only
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref SecurityGroupApp # Allow MySQL/Aurora from App SG
      Tags:
        - Key: Name
          Value: !Sub "${namePrefix}-DbSG"
  SecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH from anywhere
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        #allowing SSH from specific IP range
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP # Allow SSH from your IP
Outputs:
  #export security group IDs for use in other stacks
  LoadBalancerSecurityGroupId:
    Description: Security Group ID for Load Balancer
    Value: !Ref SecurityGroupLoadALB
    Export:
      Name: !Sub "${AWS::StackName}-LoadBalancerSecurityGroupId"
  AppSecurityGroupId:
    Description: Security Group ID for App Servers
    Value: !Ref SecurityGroupApp
    Export:
      Name: !Sub "${AWS::StackName}-AppSecurityGroupId"
  DbSecurityGroupId:
    Description: Security Group ID for Database Servers
    Value: !Ref SecurityGroupDb
    Export:
      Name: !Sub "${AWS::StackName}-DbSecurityGroupId"

  SSHSecurityGroupId:
    Description: Security Group ID for SSH Access
    Value: !Ref SecurityGroupSSH
    Export:
      Name: !Sub "${AWS::StackName}-SSHSecurityGroupId"
