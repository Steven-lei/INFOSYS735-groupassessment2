AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Create an S3 bucket with static website hosting enabled
  Create CodePipeline for CI/CD from Github to S3 website (cannot implement it due to Lab environment limitation)
Parameters:
  namePrefix:
    Type: String
    Default: anygroup
    Description: Prefix for resource names(must be lower case)
  BucketName:
    Type: String
    Default: static-website
    Description: S3 bucket name for the static website (must be globally unique)
  # IAMRole:
  #   Type: String
  #   Description: IAM Role for CodePipeline

  # GitHubOwner:
  #   Type: String
  #   Description: GitHub username or organization
  #   Default: Steven-lei
  # GitHubRepo:
  #   Type: String
  #   Description: GitHub repository name
  #   Default: cafe-static
  # GitHubBranch:
  #   Type: String
  #   Default: main
  #   Description: GitHub branch to deploy from
Resources:
  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${BucketName}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticWebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${StaticWebsiteBucket.Arn}/*"
  # ArtifactBucket:
  #   Type: AWS::S3::Bucket
  # CodePipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Name: !Sub ${namePrefix}-pipeline
  #     RoleArn: !Sub ${IAMRole}
  #     ArtifactStore:
  #       Type: S3
  #       Location: !Ref ArtifactBucket
  #     Stages:
  #       - Name: Source
  #         Actions:
  #           - Name: SourceAction
  #             ActionTypeId:
  #               Category: Source
  #               Owner: ThirdParty
  #               Provider: GitHub
  #               Version: "1"
  #             Configuration:
  #               Owner: !Ref GitHubOwner
  #               Repo: !Ref GitHubRepo
  #               Branch: !Ref GitHubBranch
  #             OutputArtifacts:
  #               - Name: SourceOutput
  #       - Name: Deploy
  #         Actions:
  #           - Name: DeployAction
  #             ActionTypeId:
  #               Category: Deploy
  #               Owner: AWS
  #               Provider: S3
  #               Version: "1"
  #             InputArtifacts:
  #               - Name: SourceOutput
  #             Configuration:
  #               BucketName: !Ref StaticWebsiteBucket
  #               Extract: true
  #               ObjectKey: "index.html"

Outputs:
  WebsiteURL:
    Description: The URL of the website
    Value: !GetAtt StaticWebsiteBucket.WebsiteURL
