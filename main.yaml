AWSTemplateFormatVersion: "2010-09-09"
Description: Deoploy a multi-tier application architecture using nested CloudFormation stacks.
Metadata:
  Comment: This is a group project for course INFOSYS 735 group assessment2
  Owner: Group 15

Parameters:
  namePrefix:
    Type: String
    Default: AnyGroup
    Description: Prefix for resource names

  repositoryUrl:
    Type: String
    #GitURL: https://raw.githubusercontent.com/Steven-lei/INFOSYS735-groupassessment2/main
    #BucketURL: https://anygroup-templates.s3.us-east-1.amazonaws.com
    Default: https://anygroup-templates.s3.us-east-1.amazonaws.com
    Description: S3 bucket URL where the nested stack templates are stored, such as https://s3.amazonaws.com/your-bucket-name

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Default: vockey
  EC2InstanceProfile:
    Type: String
    Description: IAM Instance Profile Name for the EC2 instances
    Default: LabInstanceProfile
  SNSEmail:
    Type: String
    Description: Email addresses for SNS notification
    Default: "shifeihao@outlook.com"
  CreateDB:
    Type: String
    Default: "no"
    AllowedValues: ["yes", "no"]
    Description: |
      Whether to create a RDS database with DBUsername and DBPassword
  AMI:
    Type: String
    Default: ami-07d72c15abe9995d6
    Description: the golden AMI ID, use /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 to create a golden image
  CreateMicroservices:
    Type: String
    Default: "no"
    AllowedValues: ["yes", "no"]
    Description: |
      Whether to create Microservices for API hosting
Conditions:
  NeedDB: !Equals [!Ref CreateDB, "yes"]
  NeedECS: !Equals [!Ref CreateMicroservices, "yes"]
Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/network_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        EnvType: prod
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/securitygroup_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        VPCId: !GetAtt NetworkStack.Outputs.VPCId

  LaunchTemplateStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/launch_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        LatestAmiId: !Ref AMI
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.AppSecurityGroupId
        EC2InstanceProfile: !Ref EC2InstanceProfile

  AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/autoscaling_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        VPCId: !GetAtt NetworkStack.Outputs.VPCId
        SubnetIds:
          !Join [
            ",",
            [
              !GetAtt NetworkStack.Outputs.AppSubnetAId,
              !GetAtt NetworkStack.Outputs.AppSubnetBId,
            ],
          ]
        LaunchTemplateId: !GetAtt LaunchTemplateStack.Outputs.LaunchTemplateId
        LaunchTemplateVersion: !GetAtt LaunchTemplateStack.Outputs.LaunchTemplateVersion
        Email: !Ref SNSEmail
  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
      - SecurityGroupStack
      - AutoScalingStack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/alb_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        SubnetIds:
          !Join [
            ",",
            [
              !GetAtt NetworkStack.Outputs.PublicSubnetAId,
              !GetAtt NetworkStack.Outputs.PublicSubnetBId,
            ],
          ]
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.LoadBalancerSecurityGroupId
        TargetGroupArn: !GetAtt AutoScalingStack.Outputs.TargetGroupARN
        CertificateArn: arn:aws:acm:us-east-1:003439931585:certificate/c3ca104d-ac6c-4146-a44b-4fa637af6720 # Replace with your ACM Certificate ARN
        HostedZoneId: Z0741530369VSAX50NGX # Replace with your Hosted Zone ID

  DBStack:
    Type: AWS::CloudFormation::Stack
    Condition: NeedDB
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/db_mysql_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        SubnetIds:
          !Join [
            ",",
            [
              !GetAtt NetworkStack.Outputs.DbSubnetAId,
              !GetAtt NetworkStack.Outputs.DbSubnetBId,
            ],
          ]
        SecurityGroupId: !GetAtt SecurityGroupStack.Outputs.DbSecurityGroupId
        EnvType: "prod"
  ECSStack:
    Condition: NeedECS
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${repositoryUrl}/templates/ecs_template.yaml"
      Parameters:
        namePrefix: !Ref namePrefix
        VPCId: !GetAtt NetworkStack.Outputs.VPCId
        TasksSubnetIds:
          !Join [
            ",",
            [
              !GetAtt NetworkStack.Outputs.AppSubnetAId,
              !GetAtt NetworkStack.Outputs.AppSubnetBId,
            ],
          ]
        ALBSubnetIds:
          !Join [
            ",",
            [
              !GetAtt NetworkStack.Outputs.PublicSubnetAId,
              !GetAtt NetworkStack.Outputs.PublicSubnetBId,
            ],
          ]
        TasksSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.ApiSecurityGroupId
        ALBSecurityGroupId: !GetAtt SecurityGroupStack.Outputs.LoadBalancerSecurityGroupId
